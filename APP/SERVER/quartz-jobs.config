<?xml version="1.0" encoding="utf-8" ?>
<job-scheduling-data xmlns="http://quartznet.sourceforge.net/JobSchedulingData"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                version="2.0">
  <processing-directives>
    <overwrite-existing-data>true</overwrite-existing-data>
  </processing-directives>
  <schedule>

    <job>
      <name>send-disputes-to-bizagi</name>
      <job-type>Yellow.Server.Jobs.DisputeProcessing.BatchDisputeProcessorJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-disputes-trigger</name>
        <job-name>send-disputes-to-bizagi</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>remind-users-to-activate</name>
      <job-type>Yellow.Server.Jobs.RemindActivation.RemindUsersToActivateJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>remind-users-to-activate-trigger</name>
        <job-name>remind-users-to-activate</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>change-CallReport-password</name>
      <job-type>Yellow.Server.Jobs.ChangeCallReportPassword.ChangeSecondaryCredentialsPasswordJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>change-CallReport-password-trigger</name>
        <job-name>change-CallReport-password</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>change-TS-CallReport-password</name>
      <job-type>Yellow.Server.Jobs.ChangeCallReportPassword.ChangeSecondaryCredentialsPasswordJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>change-TS-CallReport-password-trigger</name>
        <job-name>change-TS-CallReport-password</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>switch-CallReport-credentials</name>
      <job-type>Yellow.Server.Jobs.SwitchCallReportCredentials.SwitchCallReportCredentialsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>switch-CallReport-credentials-trigger</name>
        <job-name>switch-CallReport-credentials</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>switch-TS-CallReport-credentials</name>
      <job-type>Yellow.Server.Jobs.SwitchCallReportCredentials.SwitchCallReportCredentialsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>switch-TS-CallReport-credentials-trigger</name>
        <job-name>switch-TS-CallReport-credentials</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-credit-report-notifications</name>
      <job-type>Yellow.Server.Jobs.SendCreditReportNotifications.SendCreditReportNotificationsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-credit-report-notifications-trigger</name>
        <job-name>send-credit-report-notifications</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-subscription-changes-to-call-monitor</name>
      <job-type>Yellow.Server.Jobs.SendSubscriptionsChangesToCallMonitor.SendSubscriptionChangesToCallMonitorJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-subscription-changes-to-call-monitor-trigger</name>
        <job-name>send-subscription-changes-to-call-monitor</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>read-alerts-from-call-monitor</name>
      <job-type>Yellow.Server.Jobs.ReadAlertsFromCallMonitor.ReadAlertsFromCallMonitorOutputJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>read-alerts-from-call-monitor-trigger</name>
        <job-name>read-alerts-from-call-monitor</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-web-watch-activation-reminder</name>
      <job-type>Yellow.Server.Jobs.SendWebWatchActivationReminder.SendWebWatchActivationReminderJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-web-watch-activation-reminder-trigger</name>
        <job-name>send-web-watch-activation-reminder</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-web-watch-no-alert</name>
      <job-type>Yellow.Server.Jobs.SendNoAlertNotification.SendWebWatchNoAlertNotification.SendWebWatchNoAlertNotificationJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-web-watch-no-alert-trigger</name>
        <job-name>send-web-watch-no-alert</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>


    <job>
      <name>send-invitations-to-sav-users</name>
      <job-type>Yellow.Server.Jobs.SendInvitationsToSavUsers.SendInvitationsToSavUsersJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-invitations-to-sav-users-trigger</name>
        <job-name>send-invitations-to-sav-users</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-chasers-to-sav-users</name>
      <job-type>Yellow.Server.Jobs.SendChasersToSavUsers.SendChasersToSavUsersJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-chasers-to-sav-users-trigger</name>
        <job-name>send-chasers-to-sav-users</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-no-noddle-alert-emails</name>
      <job-type>Yellow.Server.Jobs.SendNoNoddleAlertEmails.SendNoNoddleAlertEmailsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-no-noddle-alert-emails-trigger</name>
        <job-name>send-no-noddle-alert-emails</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-kba-not-answered-reminder-emails</name>
      <job-type>Yellow.Server.Jobs.KbaNotAnsweredReminder.KbaNotAnsweredReminderJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-kba-not-answered-reminder-emails-trigger</name>
        <job-name>send-kba-not-answered-reminder-emails</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>sav-tokens-importer</name>
      <job-type>Yellow.Server.Jobs.ImportSavTokens.ImportSavTokensJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>sav-tokens-importer-trigger</name>
        <job-name>sav-tokens-importer</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>batch-operations</name>
      <job-type>Yellow.Server.Jobs.BatchOperations.BatchOperationsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>batch-operations-trigger</name>
        <job-name>batch-operations</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>clean-db</name>
      <job-type>Yellow.Server.Jobs.CleanDB.CleanDBJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>clean-db-trigger</name>
        <job-name>clean-db</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>sav-premium-products-auto-renewal</name>
      <job-type>Yellow.Server.Jobs.PremiumProductsAutoRenewals.SavPremiumProductsAutoRenewal.SavPremiumProductsAutoRenewalJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>sav-premium-products-auto-renewal-trigger</name>
        <job-name>sav-premium-products-auto-renewal</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>halifax-premium-products-auto-renewal</name>
      <job-type>Yellow.Server.Jobs.PremiumProductsAutoRenewals.HalifaxPremiumProductsAutoRenewal.HalifaxPremiumProductsAutoRenewalJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>halifax-premium-products-auto-renewal-trigger</name>
        <job-name>halifax-premium-products-auto-renewal</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>ni-renewal-reminder</name>
      <job-type>Yellow.Server.Jobs.SendRenewalReminder.NoddleImprove.SendNIRenewalReminderJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>ni-renewal-reminder-trigger</name>
        <job-name>ni-renewal-reminder</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>na-renewal-reminder</name>
      <job-type>Yellow.Server.Jobs.SendRenewalReminder.NoddleAlerts.SendNARenewalReminderJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>na-renewal-reminder-trigger</name>
        <job-name>na-renewal-reminder</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>nww-renewal-reminder</name>
      <job-type>Yellow.Server.Jobs.SendRenewalReminder.NoddleWebWatch.SendNWWRenewalReminderJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>nww-renewal-reminder-trigger</name>
        <job-name>nww-renewal-reminder</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>tesco-create-tokens</name>
      <job-type>Yellow.Server.Jobs.CreateTescoTokens.CreateTescoTokensJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>tesco-create-tokens-trigger</name>
        <job-name>tesco-create-tokens</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-welcome-emails</name>
      <job-type>Yellow.Server.Jobs.SendWelcomeEmails.SendWelcomeEmailsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-welcome-emails-trigger</name>
        <job-name>send-welcome-emails</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>create-CV-thin-file-validation-batch-file</name>
      <job-type>Yellow.Server.Jobs.CreateCVThinFileValidationBatchFile.CreateCVThinFileValidationBatchFileJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>create-CV-thin-file-validation-batch-file-trigger</name>
        <job-name>create-CV-thin-file-validation-batch-file</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <!--it is important, that process subscriptions runs just before close accounts job-->
    <!--because we now want to closed rmg accounts with cancelled subscription-->
    <!--we dont want to wait till next day with closing those-->
    <job>
      <name>process-subscriptions</name>
      <job-type>Yellow.Server.Jobs.ProcessSubscriptions.ProcessSubscriptionsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>process-subscriptions-trigger</name>
        <job-name>process-subscriptions</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>close-accounts</name>
      <job-type>Yellow.Server.Jobs.CloseAccounts.CloseAccountsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>close-accounts-trigger</name>
        <job-name>close-accounts</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>read-cv-thin-file-output</name>
      <job-type>Yellow.Server.Jobs.ReadCallValidateThinFileOutput.ReadCallValidateThinFileOutputJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>read-cv-thin-file-output-trigger</name>
        <job-name>read-cv-thin-file-output</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>unsubscribe-from-cm</name>
      <job-type>Yellow.Server.Jobs.UnsubscribeFromCM.UnsubscribeFromCmJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>unsubscribe-from-cm-trigger</name>
        <job-name>unsubscribe-from-cm</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>copy-consent-statements</name>
      <job-type>Yellow.Server.Jobs.CopyConsentStatementsFromUsers.CopyConsentStatementsFromUsersJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>copy-consent-statements-trigger</name>
        <job-name>copy-consent-statements</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>read-alerts-from-c6-for-web-monitoring</name>
      <job-type>Yellow.Server.Jobs.ReadAlertsFromC6.ForWebMonitoring.ReadAlertsFromC6OutputForWebMonitoringJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>read-alerts-from-c6-for-web-monitoring-trigger</name>
        <job-name>read-alerts-from-c6-for-web-monitoring</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>read-alerts-from-c6-for-web-watch</name>
      <job-type>Yellow.Server.Jobs.ReadAlertsFromC6.ForWebWatch.ReadAlertsFromC6OutputForWebWatchJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>read-alerts-from-c6-for-web-watch-trigger</name>
        <job-name>read-alerts-from-c6-for-web-watch</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-card-expiry-emails</name>
      <job-type>Yellow.Server.Jobs.SendCardExpiryEmails.SendCardExpiryEmailsJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-card-expiry-emails-trigger</name>
        <job-name>send-card-expiry-emails</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

    <job>
      <name>send-web-monitoring-no-alert</name>
      <job-type>Yellow.Server.Jobs.SendNoAlertNotification.SendWebMonitoringNoAlertNotification.SendWebMonitoringNoAlertNotificationJob, Yellow.Server</job-type>
      <durable>true</durable>
      <recover>false</recover>
    </job>
    <trigger>
      <cron>
        <name>send-web-monitoring-no-alert-trigger</name>
        <job-name>send-web-monitoring-no-alert</job-name>
        <!--every minute-->
        <cron-expression>0 0/1 * * * ?</cron-expression>
      </cron>
    </trigger>

  </schedule>
</job-scheduling-data>